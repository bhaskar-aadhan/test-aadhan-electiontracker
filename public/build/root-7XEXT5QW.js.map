{
  "version": 3,
  "sources": ["../../app/root.tsx", "css-bundle-plugin-ns:@remix-run/css-bundle"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\root.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\root.tsx\");\n}\n// REMIX HMR END\n\nimport { useState } from \"react\";\nimport { cssBundleHref } from \"@remix-run/css-bundle\";\nimport { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration, useRouteError, isRouteErrorResponse } from \"@remix-run/react\";\nimport stylesheet from \"~/tailwind.css\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { faviconIcon } from \"~/assets/images\";\nexport const links = () => [{\n  rel: \"icon\",\n  href: faviconIcon\n}, {\n  rel: \"stylesheet\",\n  href: stylesheet\n}, ...(cssBundleHref ? [{\n  rel: \"stylesheet\",\n  href: cssBundleHref\n}] : [])];\nexport default function App() {\n  _s();\n  const [queryClient] = useState(() => new QueryClient({\n    defaultOptions: {\n      queries: {\n\n        // With SSR, we usually want to set some default staleTime\n        // above 0 to avoid refetching immediately on the client\n        // staleTime: 2000,\n      }\n    }\n  }));\n  return <html lang=\"en\">\r\n      <head>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n        <QueryClientProvider client={queryClient}>\r\n          <Outlet />\r\n          <ScrollRestoration />\r\n          <Scripts />\r\n          <LiveReload />\r\n        </QueryClientProvider>\r\n      </body>\r\n    </html>;\n}\n_s(App, \"7bVX85ywBcbIUFWRh5vcPT+aSf0=\");\n_c = App;\nexport function ErrorBoundary() {\n  _s2();\n  const error = useRouteError();\n  console.log(\"form remix error boundary\", error);\n  if (isRouteErrorResponse(error)) {\n    return <div>\r\n        <h1>\r\n          {error.status} {error.statusText}\r\n        </h1>\r\n        <p>{error.data}</p>\r\n      </div>;\n  } else if (error instanceof Error) {\n    return <div>\r\n        <h1>Error</h1>\r\n        <p>{error.message}</p>\r\n        <p>The stack trace is:</p>\r\n        <pre>{error.stack}</pre>\r\n      </div>;\n  } else {\n    return <h1>Unknown Error</h1>;\n  }\n}\n_s2(ErrorBoundary, \"oAgjgbJzsRXlB89+MoVumxMQqKM=\", false, function () {\n  return [useRouteError];\n});\n_c2 = ErrorBoundary;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ErrorBoundary\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "export const cssBundleHref = undefined;"],
  "mappings": "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",
  "names": []
}
